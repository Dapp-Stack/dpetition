{
  "contractName": "ENSRegistered",
  "abi": [
    {
      "inputs": [
        {
          "name": "_hashLabel",
          "type": "bytes32"
        },
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_node",
          "type": "bytes32"
        },
        {
          "name": "ens",
          "type": "address"
        },
        {
          "name": "registrar",
          "type": "address"
        },
        {
          "name": "resolver",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    }
  ],
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ENS/ENS.sol\";\nimport \"./ENS/FIFSRegistrar.sol\";\nimport \"./ENS/PublicResolver.sol\";\nimport \"./ENS/ReverseRegistrar.sol\";\n\n\ncontract ENSRegistered {\n    bytes32 constant ADDR_REVERSE_NODE = 0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\n    \n    constructor(bytes32 _hashLabel, string memory _name, bytes32 _node, ENS ens, FIFSRegistrar registrar, PublicResolver resolver) public {\n        registrar.register(_hashLabel, address(this));\n        ens.setResolver(_node, address(resolver));\n        resolver.setAddr(_node, address(this));\n        ReverseRegistrar reverseRegistrar = ReverseRegistrar(ens.owner(ADDR_REVERSE_NODE));\n        reverseRegistrar.setName(_name);\n    }\n}\n",
  "sourcePath": "/Users/anthony/code/DappStack/dpetition/contracts/src/ENSRegistered.sol",
  "bytecode": "608060405234801561001057600080fd5b50604051610515380380610515833981018060405260c081101561003357600080fd5b8101908080519060200190929190805164010000000081111561005557600080fd5b8281019050602081018481111561006b57600080fd5b815185600182028301116401000000008211171561008857600080fd5b5050929190602001805190602001909291908051906020019092919080519060200190929190805190602001909291905050508173ffffffffffffffffffffffffffffffffffffffff1663d22057a987306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561015e57600080fd5b505af1158015610172573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16631896f70a85836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561021957600080fd5b505af115801561022d573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663d5fa2b0085306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156102d457600080fd5b505af11580156102e8573d6000803e3d6000fd5b5050505060008373ffffffffffffffffffffffffffffffffffffffff166302571be37f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e26001026040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561037e57600080fd5b505afa158015610392573d6000803e3d6000fd5b505050506040513d60208110156103a857600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff1663c47f0027876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610443578082015181840152602081019050610428565b50505050905090810190601f1680156104705780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561048f57600080fd5b505af11580156104a3573d6000803e3d6000fd5b505050506040513d60208110156104b957600080fd5b810190808051906020019092919050505050505050505050506035806104e06000396000f3fe6080604052600080fdfea165627a7a7230582065d0c5887939e268a9a81c734a640a8461e4010a1f1ae6133cfb2a99ba9497940029",
  "sourceMap": "157:573:6:-;;;300:428;8:9:-1;5:2;;;30:1;27;20:12;5:2;300:428:6;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;300:428:6;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;300:428:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;444:9;:18;;;463:10;483:4;444:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;444:45:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;444:45:6;;;;499:3;:15;;;515:5;530:8;499:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:41:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;499:41:6;;;;550:8;:16;;;567:5;582:4;550:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;550:38:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;550:38:6;;;;598:33;651:3;:9;;;223:66;661:17;;651:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;651:28:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;651:28:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;651:28:6;;;;;;;;;;;;;;;;598:82;;690:16;:24;;;715:5;690:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;690:31:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;690:31:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;690:31:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;690:31:6;;;;;;;;;;;;;;;;;300:428;;;;;;;157:573;;;;;;",
  "deployedBytecode": "6080604052600080fdfea165627a7a7230582065d0c5887939e268a9a81c734a640a8461e4010a1f1ae6133cfb2a99ba9497940029",
  "deployedSourceMap": "157:573:6:-;;;;;"
}