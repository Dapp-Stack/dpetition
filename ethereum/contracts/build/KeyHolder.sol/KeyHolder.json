{
  "contractName": "KeyHolder",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getKeyPurpose",
      "outputs": [
        {
          "name": "purpose",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getKey",
      "outputs": [
        {
          "name": "purpose",
          "type": "uint256"
        },
        {
          "name": "keyType",
          "type": "uint256"
        },
        {
          "name": "key",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        },
        {
          "name": "_purpose",
          "type": "uint256"
        },
        {
          "name": "_type",
          "type": "uint256"
        }
      ],
      "name": "addKey",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "keyExist",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        },
        {
          "name": "_purpose",
          "type": "uint256"
        }
      ],
      "name": "removeKey",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_purpose",
          "type": "uint256"
        }
      ],
      "name": "getKeysByPurpose",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_keys",
          "type": "bytes32[]"
        },
        {
          "name": "_purposes",
          "type": "uint256[]"
        },
        {
          "name": "_types",
          "type": "uint256[]"
        }
      ],
      "name": "addKeys",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        },
        {
          "name": "_purpose",
          "type": "uint256"
        }
      ],
      "name": "keyHasPurpose",
      "outputs": [
        {
          "name": "result",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "keys",
      "outputs": [
        {
          "name": "purpose",
          "type": "uint256"
        },
        {
          "name": "keyType",
          "type": "uint256"
        },
        {
          "name": "key",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "MultipleKeysAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "purpose",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "keyType",
          "type": "uint256"
        }
      ],
      "name": "KeyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "purpose",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "keyType",
          "type": "uint256"
        }
      ],
      "name": "KeyRemoved",
      "type": "event"
    }
  ],
  "source": "\npragma solidity ^0.5.0;\n\nimport \"./IERC725KeyHolder.sol\";\n\ncontract KeyHolder is IERC725KeyHolder {\n    mapping (bytes32 => Key) public keys;\n    mapping (uint256 => bytes32[]) keysByPurpose;\n\n    constructor(bytes32 _key) public {\n        keys[_key].key = _key;\n        keys[_key].purpose = MANAGEMENT_KEY;\n        keys[_key].keyType = ECDSA_TYPE;\n\n        keysByPurpose[MANAGEMENT_KEY].push(_key);\n\n        emit KeyAdded(keys[_key].key,  keys[_key].purpose, keys[_key].keyType);\n    }\n\n    function() external payable {\n\n    }\n\n    modifier onlyManagementOrActionKeys(bytes32 sender) {\n        bool isActionKey = keyHasPurpose(sender, ACTION_KEY);\n        bool isManagementKey = keyHasPurpose(sender, MANAGEMENT_KEY);\n        require(isActionKey || isManagementKey, \"Invalid key\");\n        _;\n    }\n\n    modifier onlyManagementKeyOrThisContract() {\n        bool isManagementKey = keyHasPurpose(bytes32(uint256(msg.sender)), MANAGEMENT_KEY);\n        require(isManagementKey || msg.sender == address(this), \"Sender not permissioned\");\n        _;\n    }\n\n    function keyExist(bytes32 _key) public view returns(bool) {\n        return keys[_key].key != bytes32(0x0);\n    }\n\n    function getKey(bytes32 _key) public view returns(uint256 purpose, uint256 keyType, bytes32 key) {\n        return (keys[_key].purpose, keys[_key].keyType, keys[_key].key);\n    }\n\n    function getKeyPurpose(bytes32 _key) public view returns(uint256 purpose) {\n        return keys[_key].purpose;\n    }\n\n    function getKeysByPurpose(uint256 _purpose) public view returns(bytes32[] memory) {\n        return keysByPurpose[_purpose];\n    }\n\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) public view returns(bool result) {\n        return keys[_key].purpose == _purpose;\n    }\n\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _type) public onlyManagementKeyOrThisContract returns(bool success) {\n        require(keys[_key].key != _key, \"Key already added\");\n\n        keys[_key].key = _key;\n        keys[_key].purpose = _purpose;\n        keys[_key].keyType = _type;\n\n        keysByPurpose[_purpose].push(_key);\n\n        emit KeyAdded(keys[_key].key,  keys[_key].purpose, keys[_key].keyType);\n\n        return true;\n    }\n\n    function addKeys(bytes32[] memory _keys, uint256[] memory _purposes, uint256[] memory _types) public onlyManagementKeyOrThisContract returns(bool success) {\n        require(_keys.length == _purposes.length && _keys.length == _types.length, \"Unequal argument set lengths\");\n        for (uint i = 0; i < _keys.length; i++) {\n            addKey(_keys[i], _purposes[i], _types[i]);\n        }\n        emit MultipleKeysAdded(_keys.length);\n        return true;\n    }\n\n    function removeKey(bytes32 _key, uint256 _purpose) public  onlyManagementKeyOrThisContract returns(bool success) {\n        require(keys[_key].purpose != MANAGEMENT_KEY || keysByPurpose[MANAGEMENT_KEY].length > 1, \"Can not remove management key\");\n        require(keys[_key].purpose == _purpose, \"Invalid key\");\n\n        emit KeyRemoved(keys[_key].key, keys[_key].purpose, keys[_key].keyType);\n\n        delete keys[_key];\n\n        for (uint i = 0; i < keysByPurpose[_purpose].length; i++) {\n            if (keysByPurpose[_purpose][i] == _key) {\n                keysByPurpose[_purpose][i] = keysByPurpose[_purpose][keysByPurpose[_purpose].length - 1];\n                delete keysByPurpose[_purpose][keysByPurpose[_purpose].length - 1];\n                keysByPurpose[_purpose].length--;\n            }\n        }\n\n        return true;\n    }\n\n    event MultipleKeysAdded(uint count);\n}\n",
  "sourcePath": "/Users/anthony/code/DappStack/dpetition/ethereum/contracts/src/KeyHolder.sol",
  "bytecode": "608060405234801561001057600080fd5b5060405160208061113a8339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000808381526020019081526020016000206002018190555060016000808381526020019081526020016000206000018190555060016000808381526020019081526020016000206001018190555060016000600181526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055506000808281526020019081526020016000206001015460008083815260200190815260200160002060000154600080848152602001908152602001600020600201547f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e960405160405180910390a450610fed8061014d6000396000f3fe6080604052600436106100a3576000357c01000000000000000000000000000000000000000000000000000000009004806353d413c51161007657806353d413c51461020b5780639010f72614610268578063caa3782b146102f8578063d202158d146104fd578063dde5b7a11461055a576100a3565b8063032c1a8a146100a557806312aaac70146100f45780631d3812401461015157806323f74052146101b8575b005b3480156100b157600080fd5b506100de600480360360208110156100c857600080fd5b81019080803590602001909291905050506105b7565b6040518082815260200191505060405180910390f35b34801561010057600080fd5b5061012d6004803603602081101561011757600080fd5b81019080803590602001909291905050506105d6565b60405180848152602001838152602001828152602001935050505060405180910390f35b34801561015d57600080fd5b5061019e6004803603606081101561017457600080fd5b8101908080359060200190929190803590602001909291908035906020019092919050505061062a565b604051808215151515815260200191505060405180910390f35b3480156101c457600080fd5b506101f1600480360360208110156101db57600080fd5b8101908080359060200190929190505050610890565b604051808215151515815260200191505060405180910390f35b34801561021757600080fd5b5061024e6004803603604081101561022e57600080fd5b8101908080359060200190929190803590602001909291905050506108b5565b604051808215151515815260200191505060405180910390f35b34801561027457600080fd5b506102a16004803603602081101561028b57600080fd5b8101908080359060200190929190505050610cad565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102e45780820151818401526020810190506102c9565b505050509050019250505060405180910390f35b34801561030457600080fd5b506104e36004803603606081101561031b57600080fd5b810190808035906020019064010000000081111561033857600080fd5b82018360208201111561034a57600080fd5b8035906020019184602083028401116401000000008311171561036c57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103cc57600080fd5b8201836020820111156103de57600080fd5b8035906020019184602083028401116401000000008311171561040057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561046057600080fd5b82018360208201111561047257600080fd5b8035906020019184602083028401116401000000008311171561049457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610d18565b604051808215151515815260200191505060405180910390f35b34801561050957600080fd5b506105406004803603604081101561052057600080fd5b810190808035906020019092919080359060200190929190505050610f24565b604051808215151515815260200191505060405180910390f35b34801561056657600080fd5b506105936004803603602081101561057d57600080fd5b8101908080359060200190929190505050610f46565b60405180848152602001838152602001828152602001935050505060405180910390f35b6000806000838152602001908152602001600020600001549050919050565b60008060008060008581526020019081526020016000206000015460008086815260200190815260200160002060010154600080878152602001908152602001600020600201549250925092509193909250565b6000806106513373ffffffffffffffffffffffffffffffffffffffff166001026001610f24565b9050808061068a57503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156106fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f53656e646572206e6f74207065726d697373696f6e656400000000000000000081525060200191505060405180910390fd5b84600080878152602001908152602001600020600201541415151561078b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4b657920616c726561647920616464656400000000000000000000000000000081525060200191505060405180910390fd5b846000808781526020019081526020016000206002018190555083600080878152602001908152602001600020600001819055508260008087815260200190815260200160002060010181905550600160008581526020019081526020016000208590806001815401808255809150509060018203906000526020600020016000909192909190915055506000808681526020019081526020016000206001015460008087815260200190815260200160002060000154600080888152602001908152602001600020600201547f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e960405160405180910390a460019150509392505050565b6000806001026000808481526020019081526020016000206002015414159050919050565b6000806108dc3373ffffffffffffffffffffffffffffffffffffffff166001026001610f24565b9050808061091557503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515610989576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f53656e646572206e6f74207065726d697373696f6e656400000000000000000081525060200191505060405180910390fd5b6001600080868152602001908152602001600020600001541415806109c4575060018060006001815260200190815260200160002080549050115b1515610a38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f43616e206e6f742072656d6f7665206d616e6167656d656e74206b657900000081525060200191505060405180910390fd5b8260008086815260200190815260200160002060000154141515610ac4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f496e76616c6964206b657900000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000808581526020019081526020016000206001015460008086815260200190815260200160002060000154600080878152602001908152602001600020600201547f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d339760405160405180910390a460008085815260200190815260200160002060008082016000905560018201600090556002820160009055505060008090505b6001600085815260200190815260200160002080549050811015610ca157846001600086815260200190815260200160002082815481101515610ba457fe5b90600052602060002001541415610c94576001600085815260200190815260200160002060018060008781526020019081526020016000208054905003815481101515610bed57fe5b90600052602060002001546001600086815260200190815260200160002082815481101515610c1857fe5b90600052602060002001819055506001600085815260200190815260200160002060018060008781526020019081526020016000208054905003815481101515610c5e57fe5b906000526020600020016000905560016000858152602001908152602001600020805480919060019003610c929190610f70565b505b8080600101915050610b65565b50600191505092915050565b606060016000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610d0c57602002820191906000526020600020905b815481526020019060010190808311610cf8575b50505050509050919050565b600080610d3f3373ffffffffffffffffffffffffffffffffffffffff166001026001610f24565b90508080610d7857503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515610dec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f53656e646572206e6f74207065726d697373696f6e656400000000000000000081525060200191505060405180910390fd5b83518551148015610dfe575082518551145b1515610e72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f556e657175616c20617267756d656e7420736574206c656e677468730000000081525060200191505060405180910390fd5b60008090505b8551811015610edf57610ed18682815181101515610e9257fe5b906020019060200201518683815181101515610eaa57fe5b906020019060200201518684815181101515610ec257fe5b9060200190602002015161062a565b508080600101915050610e78565b507f60adf38c13a1938c05e8f58e818ac5a3f74aa8652155df92802c3b64932747ee85516040518082815260200191505060405180910390a160019150509392505050565b6000816000808581526020019081526020016000206000015414905092915050565b60006020528060005260406000206000915090508060000154908060010154908060020154905083565b815481835581811115610f9757818360005260206000209182019101610f969190610f9c565b5b505050565b610fbe91905b80821115610fba576000816000905550600101610fa2565b5090565b9056fea165627a7a723058201091d17dd1e465a7a918ec61c7b0d0334bf1e731739d3258cb289b60d5a6af640029",
  "sourceMap": "60:3503:15:-;;;198:289;8:9:-1;5:2;;;30:1;27;20:12;5:2;198:289:15;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;198:289:15;;;;;;;;;;;;;;;;258:4;241;:10;246:4;241:10;;;;;;;;;;;:14;;:21;;;;95:1:12;272:4:15;:10;277:4;272:10;;;;;;;;;;;:18;;:35;;;;253:1:12;317:4:15;:10;322:4;317:10;;;;;;;;;;;:18;;:31;;;;359:13;:29;95:1:12;359:29:15;;;;;;;;;;;394:4;359:40;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;359:40:15;;;;;;;;;;;;;;;;;;;;;;461:4;:10;466:4;461:10;;;;;;;;;;;:18;;;441:4;:10;446:4;441:10;;;;;;;;;;;:18;;;424:4;:10;429:4;424:10;;;;;;;;;;;:14;;;415:65;;;;;;;;;;198:289;60:3503;;;;;;",
  "deployedBytecode": "",
  "deployedSourceMap": "60:3503:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1359:116:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1359:116:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1176:177;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1176:177:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1176:177:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1764:448;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1764:448:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1764:448:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1058:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1058:112:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1058:112:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2684:835;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2684:835:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2684:835:15;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1481:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1481:129:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1481:129:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1481:129:15;;;;;;;;;;;;;;;;;2218:460;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2218:460:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2218:460:15;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2218:460:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2218:460:15;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2218:460:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2218:460:15;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2218:460:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2218:460:15;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2218:460:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2218:460:15;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2218:460:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2218:460:15;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2218:460:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2218:460:15;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1616:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1616:142:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1616:142:15;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;105:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;105:36:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;105:36:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:116;1416:15;1450:4;:10;1455:4;1450:10;;;;;;;;;;;:18;;;1443:25;;1359:116;;;:::o;1176:177::-;1226:15;1243;1260:11;1291:4;:10;1296:4;1291:10;;;;;;;;;;;:18;;;1311:4;:10;1316:4;1311:10;;;;;;;;;;;:18;;;1331:4;:10;1336:4;1331:10;;;;;;;;;;;:14;;;1283:63;;;;;;1176:177;;;;;:::o;1764:448::-;1874:12;860:20;883:59;913:10;905:19;;897:28;;95:1:12;883:13:15;:59::i;:::-;860:82;;960:15;:46;;;;1001:4;979:27;;:10;:27;;;960:46;952:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1924:4;1906;:10;1911:4;1906:10;;;;;;;;;;;:14;;;:22;;1898:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1978:4;1961;:10;1966:4;1961:10;;;;;;;;;;;:14;;:21;;;;2013:8;1992:4;:10;1997:4;1992:10;;;;;;;;;;;:18;;:29;;;;2052:5;2031:4;:10;2036:4;2031:10;;;;;;;;;;;:18;;:26;;;;2068:13;:23;2082:8;2068:23;;;;;;;;;;;2097:4;2068:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2068:34:15;;;;;;;;;;;;;;;;;;;;;;2164:4;:10;2169:4;2164:10;;;;;;;;;;;:18;;;2144:4;:10;2149:4;2144:10;;;;;;;;;;;:18;;;2127:4;:10;2132:4;2127:10;;;;;;;;;;;:14;;;2118:65;;;;;;;;;;2201:4;2194:11;;1764:448;;;;;;:::o;1058:112::-;1110:4;1159:3;1151:12;;1133:4;:10;1138:4;1133:10;;;;;;;;;;;:14;;;:30;;1126:37;;1058:112;;;:::o;2684:835::-;2783:12;860:20;883:59;913:10;905:19;;897:28;;95:1:12;883:13:15;:59::i;:::-;860:82;;960:15;:46;;;;1001:4;979:27;;:10;:27;;;960:46;952:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;95:1:12;2815:4:15;:10;2820:4;2815:10;;;;;;;;;;;:18;;;:36;;:80;;;;2894:1;2855:13;:29;95:1:12;2855:29:15;;;;;;;;;;;:36;;;;:40;2815:80;2807:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2969:8;2947:4;:10;2952:4;2947:10;;;;;;;;;;;:18;;;:30;2939:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3056:4;:10;3061:4;3056:10;;;;;;;;;;;:18;;;3036:4;:10;3041:4;3036:10;;;;;;;;;;;:18;;;3020:4;:10;3025:4;3020:10;;;;;;;;;;;:14;;;3009:66;;;;;;;;;;3093:4;:10;3098:4;3093:10;;;;;;;;;;;;3086:17;;;;;;;;;;;;;;;;;;;;3119:6;3128:1;3119:10;;3114:377;3135:13;:23;3149:8;3135:23;;;;;;;;;;;:30;;;;3131:1;:34;3114:377;;;3220:4;3190:13;:23;3204:8;3190:23;;;;;;;;;;;3214:1;3190:26;;;;;;;;;;;;;;;;;;:34;3186:295;;;3273:13;:23;3287:8;3273:23;;;;;;;;;;;3330:1;3297:13;:23;3311:8;3297:23;;;;;;;;;;;:30;;;;:34;3273:59;;;;;;;;;;;;;;;;;;3244:13;:23;3258:8;3244:23;;;;;;;;;;;3268:1;3244:26;;;;;;;;;;;;;;;;;:88;;;;3357:13;:23;3371:8;3357:23;;;;;;;;;;;3414:1;3381:13;:23;3395:8;3381:23;;;;;;;;;;;:30;;;;:34;3357:59;;;;;;;;;;;;;;;;;3350:66;;;3434:13;:23;3448:8;3434:23;;;;;;;;;;;:32;;;;;;;;;;;;:::i;:::-;;3186:295;3167:3;;;;;;;3114:377;;;;3508:4;3501:11;;2684:835;;;;;:::o;1481:129::-;1545:16;1580:13;:23;1594:8;1580:23;;;;;;;;;;;1573:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1481:129;;;:::o;2218:460::-;2359:12;860:20;883:59;913:10;905:19;;897:28;;95:1:12;883:13:15;:59::i;:::-;860:82;;960:15;:46;;;;1001:4;979:27;;:10;:27;;;960:46;952:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2407:9;:16;2391:5;:12;:32;:65;;;;;2443:6;:13;2427:5;:12;:29;2391:65;2383:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2504:6;2513:1;2504:10;;2499:106;2520:5;:12;2516:1;:16;2499:106;;;2553:41;2560:5;2566:1;2560:8;;;;;;;;;;;;;;;;;;2570:9;2580:1;2570:12;;;;;;;;;;;;;;;;;;2584:6;2591:1;2584:9;;;;;;;;;;;;;;;;;;2553:6;:41::i;:::-;;2534:3;;;;;;;2499:106;;;;2619:31;2637:5;:12;2619:31;;;;;;;;;;;;;;;;;;2667:4;2660:11;;2218:460;;;;;;:::o;1616:142::-;1691:11;1743:8;1721:4;:10;1726:4;1721:10;;;;;;;;;;;:18;;;:30;1714:37;;1616:142;;;;:::o;105:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;60:3503::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
}